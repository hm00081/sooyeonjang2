{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["syj","require","cc","App","useEffect","selectVariable","margin","width","x","d3","range","domain","nodes","length","svg","clamp","append","attr","style","call","on","event","transform","matrix","n","forEach","node","i","index","count","map","j","y","z","nodeIndex","links","link","source","target","value","orders","name","sort","a","b","group","join","enter","update","exit","remove","rowgSelection","selectAll","data","each","rowFunction","d","rowTextSelection","bandwidth","text","column","row","rowIndex","this","filter","mouseover","mouseout","nodeCycle","cycles","cycle","Number","push","transition","duration","attribute","color","mouseEvent","p","console","log","classed","className","marginTop","marginRight","id","href","display","height","marginLeft","fill","paddingRight","stroke","strokeWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d94435.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { D3ZoomEvent } from 'd3';\n\ninterface Syj {\n    nodes: { name: number; group: number }[];\n    links: { source: string; target: string; value: number }[];\n}\ninterface NodeCycle {\n    x: number;\n    y: number;\n    z: number;\n    nodeIndex: number;\n}\n\nconst syj: Syj = require('./0508.json');\nconst cc: number[][] = require('./double_array.json'); //2차원배열\n\nfunction App() {\n    /*\n  함수를 크게 5가지를 만들면 좋을 것 같습니다.\n  1. initialize: 데이터와 관련 없이 초기에 한 번 설정하면 되는 변수들을 초기화. ex> margin, width, height,\n  2. remove: 경우에 따라 없어도 될 것 같습니다.\n  3. updateData: 데이터를 업데이트 합니다. const x와 x2 등을 보니, syj2 등의 데이터에 영향을 받는 상황입니다.\n  따라서, 1) 현재 선택된 오더 순서 (ex> order by Time, ...) 대로 syj 데이터를 만들고,\n  2) 만들어진 syj를 바탕으로 nodes나 links, matrix 등의 값을 만듭니다.\n  - const orders는, 데이터 값과 관련 없는 정렬에 대한 함수인 것 같은데, 맞다면 밖으로 아예 빼서 함수로 만들면 좋을 것 같습니다.\n  4. initDraw\n  - const svg 와 같이 정렬 순서 등과 관련 없이 한 번만 부르면 되는 함수를 초기화하는 함수입니다.\n  5. updateDraw\n   */\n\n    // process 시작할 때 작동하는 javascript 코드, (vue에서 mounted()와 같음)\n    useEffect(() => {\n        // useEffecct 함수가 mounted 코드 역할을 하는 것 같습니다.\n        // 여기에 initialize, remove, updateData, initDraw, updateDraw를 순서대로 불러 줍니다.\n        // 하단 코드들을 보니 1번 ~ 4번 코드가 어느 정도 섞인 상황인 것 같아, 기능 별로 함수로 빼두고 여기서 불러 오는 형식으로 진행하시면 될 것 같습니다.\n        let selectVariable: string = '';\n        var margin = { top: 250, right: 200, bottom: 10, left: 50 },\n            width = 3000,\n            height = 3000;\n\n        const x = d3 // node modules에서 d3 import\n            .scaleBand<number>() //x축\n            .range([0, width])\n            .domain(d3.range(syj.nodes.length));\n\n        // var x = d3.scaleOrdinal().rangeBands([0, width]),\n        const z = d3.scaleLinear().domain([0, 300]).clamp(true); // y축\n        //@ts-ignore\n        const c = d3.scaleOrdinal(d3.schemeCategory10).domain(d3.range(10)); //color 조정group에 의해 색조절이 된다\n\n        const svg = d3\n            .select('body')\n            .append('svg')\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .style('margin-left', margin.left + 'px')\n            .call(\n                //@ts-ignore\n                d3.zoom().on('zoom', (event) => {\n                    svg.attr('transform', () => event.transform);\n                })\n            ) //zoomevent\n            .append('g')\n            .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        const matrix: NodeCycle[][] = [];\n\n        const nodes = syj.nodes;\n        const n = nodes.length;\n        // Compute index per node.\n        //@ts-ignore\n        nodes.forEach(function (node, i) {\n            //@ts-ignore\n            node.index = i;\n            //@ts-ignore\n            node.count = 0;\n            matrix[i] = d3.range(n).map(function (j) {\n                return { x: j, y: i, z: 0, nodeIndex: j };\n            });\n        });\n\n        // Convert links to matrix; count character occurrences.\n        //@ts-ignore\n        syj.links.forEach(function (link) {\n            //@ts-ignore\n            matrix[link.source][link.target].z += link.value;\n            //@ts-ignore\n            matrix[link.target][link.source].z += link.value;\n            //@ts-ignore\n            matrix[link.source][link.source].z += link.value;\n            //@ts-ignore\n            matrix[link.target][link.target].z += link.value;\n            //@ts-ignore\n            nodes[link.source].count += link.value;\n            //@ts-ignore\n            nodes[link.target].count += link.value;\n        });\n\n        // Precompute the orders.\n        const orders = {\n            name: d3.range(n).sort(function (a, b) {\n                return d3.ascending(nodes[a].name, nodes[b].name); //1~440까지 ascending\n            }),\n\n            // count: d3.range(n).sort(function (a, b) {\n            //   //@ts-ignore\n            //   return nodes[b].count - nodes[a].count;\n            // }),\n            group: d3.range(n).sort(function (a, b) {\n                return nodes[b].group - nodes[a].group;\n            }),\n        };\n\n        // The default sort order.\n        x.domain(orders.name);\n        //initiate()??\n        svg.join(\n            (enter: any) => enter.append('rect').attr('class', 'background').attr('width', width).attr('height', height),\n            (update: any) => update,\n            (exit: any) => exit.call((exit: any) => exit.remove())\n        );\n\n        const rowgSelection = svg.selectAll('.row').data(matrix).enter().append('g').attr('class', 'row');\n\n        // .attr(\"transform\", function (d, i) { return \"translate(0,\" + x(i) + \")\"; })\n\n        rowgSelection.each(rowFunction); // d3.each = (js,ts).forEach 같은 반복문\n\n        // original 가로줄\n        // rowgSelection.append(\"line\").attr(\"x2\", width);\n\n        rowgSelection.each(function (d, i) {\n            // d3.select(this)\n            svg.append('line').attr('x1', 0).attr('y1', x(d[0].y)!).attr('x2', width).attr('y2', x(d[0].y)!);\n        });\n\n        const rowTextSelection = rowgSelection\n            .append('text')\n            .attr('x', -2)\n            .attr('y', (d, i) => x(d[0].y)! + x.bandwidth() * 0.75)\n            // .attr(\"dx\", \".02em\")\n            .attr('font-size', '20%')\n            .attr('text-anchor', 'end')\n            .text(function (d, i) {\n                return nodes[i].name;\n            });\n\n        const column = svg\n            .selectAll('.column')\n            .data(matrix)\n            .enter()\n            .append('g')\n            .attr('class', 'column')\n            .attr('transform', function (d, i) {\n                //@ts-ignore\n                return 'translate(' + x(i) + ') rotate(-90)';\n            });\n\n        // 세로줄\n        column.append('line').attr('x1', -width);\n\n        const columnTextSelection = column\n            .append('text')\n            .attr('x', 2)\n            .attr('y', x.bandwidth() * 0.75)\n            // .attr(\"dy\", \".02em\")\n            .attr('font-size', '20%')\n            .attr('text-anchor', 'start')\n            .text(function (d, i) {\n                return nodes[i].name;\n            });\n\n        // row: d3.Selection<SVGGElement, Matrix, SVGGElement, unknown>\n        //@ts-ignore\n        function rowFunction(row: NodeCycle[], rowIndex: number) {\n            const Selection = d3\n\n                // @ts-ignore\n                .select(this)\n                .selectAll('.cell')\n                // .append(\"rect\")\n                // .attr(\"class\", \"background\")\n                // .attr(\"width\", width)\n                // .attr(\"height\", height)\n                .data(\n                    row.filter((d) => {\n                        return d.z;\n                    })\n                )\n                // .data(row)\n                .join('g')\n                .attr('class', 'cell')\n                .on('mouseover', mouseover)\n                .on('mouseout', mouseout);\n\n            Selection.each(function (nodeCycle) {\n                // [cycleNumber, cycleNumber, ...]\n                const cycles: number[] = [];\n                for (let cycle = 0; cycle < cc[0].length; cycle++) {\n                    if (cc[rowIndex][cycle] === 0 && cc[nodeCycle.nodeIndex][cycle] === 0) {\n                        // fill(none)\n                    } else if (cc[rowIndex][cycle] === 0 && cc[nodeCycle.nodeIndex][cycle] === 1) {\n                        // fill(none)\n                    } else if (cc[rowIndex][cycle] === 1 && cc[nodeCycle.nodeIndex][cycle] === 0) {\n                        // fill(none)\n                    } else if (cc[rowIndex][cycle] === 1 && cc[nodeCycle.nodeIndex][cycle] === 1) {\n                        if (\n                            selectVariable === '0' ||\n                            selectVariable === '1' ||\n                            selectVariable === '2' ||\n                            selectVariable === '3' ||\n                            selectVariable === '4' ||\n                            selectVariable === '5' ||\n                            selectVariable === '6' ||\n                            selectVariable === '7'\n                        ) {\n                            //각 사이클\n                            if (cycle === Number(selectVariable)) {\n                                // selectVariable: d3.range(n).sort(function (a,))\n\n                                cycles.push(cycle);\n                            }\n                        } else {\n                            //name, group\n                            cycles.push(cycle);\n                        }\n                    }\n                }\n                //initDraw()?\n                d3.select(this)\n                    .selectAll('path')\n                    .data(cycles)\n                    .join('path')\n                    .transition()\n                    .duration(2500)\n                    .attr('d', (d, i) => {\n                        let attribute: string = '';\n                        if (cycles.length === 1) {\n                            attribute = `M ${x(nodeCycle.x)} ${x(nodeCycle.y)} H ${x(nodeCycle.x)! + x.bandwidth()} V ${x(nodeCycle.y)! + x.bandwidth()} H${x(nodeCycle.x)} L${x(nodeCycle.x)} ${x(\n                                nodeCycle.y\n                            )}`;\n                        }\n                        if (cycles.length === 2) {\n                            if (i === 0) {\n                                // first path\n                                attribute = `M ${x(nodeCycle.x)! + x.bandwidth()} ${x(nodeCycle.y)} L ${x(nodeCycle.x)} ${x(nodeCycle.y)! + x.bandwidth()} L${x(nodeCycle.x)! + x.bandwidth()} ${\n                                    x(nodeCycle.y)! + x.bandwidth()\n                                } Z`;\n                            } else if (i === 1) {\n                                // second path\n                                attribute = `M${x(nodeCycle.x)} ${x(nodeCycle.y)} L ${x(nodeCycle.x)} ${x(nodeCycle.y)! + x.bandwidth()} L${x(nodeCycle.x)! + x.bandwidth()} ${x(nodeCycle.y)} Z`;\n                            }\n                        } else if (cycles.length === 3) {\n                            if (i === 0) {\n                                // first path\n                                attribute = `M${x(nodeCycle.x)} ${x(nodeCycle.y)! + x.bandwidth()} H ${x(nodeCycle.x)! + x.bandwidth()} V ${x(nodeCycle.y)! + (x.bandwidth() * 2) / 3} H ${x(\n                                    nodeCycle.x\n                                )}Z`;\n                            } else if (i === 1) {\n                                // second path\n                                attribute = `M${x(nodeCycle.x)} ${x(nodeCycle.y)! + (x.bandwidth() * 2) / 3} H ${x(nodeCycle.x)! + x.bandwidth()} V ${x(nodeCycle.y)! + x.bandwidth() / 3} H ${x(\n                                    nodeCycle.x\n                                )}Z`;\n                            } else if (i === 2) {\n                                // third path\n                                attribute = `M${x(nodeCycle.x)} ${x(nodeCycle.y)! + x.bandwidth() / 3} H ${x(nodeCycle.x)! + x.bandwidth()} V ${x(nodeCycle.y)} H ${x(nodeCycle.x)} Z`;\n                            }\n                        } else if (cycles.length === 4) {\n                            if (i === 0) {\n                                // first path\n                                attribute = `M${x(nodeCycle.x)} ${x(nodeCycle.y)} L${x(nodeCycle.x)! + x.bandwidth() / 2} ${x(nodeCycle.y)! + x.bandwidth()}L${x(nodeCycle.x)! + x.bandwidth()} ${x(\n                                    nodeCycle.y\n                                )}Z`;\n                            } else if (i === 1) {\n                                // second path\n                                attribute = `M${x(nodeCycle.x)! + x.bandwidth()} ${x(nodeCycle.y)! + x.bandwidth()}L${x(nodeCycle.x)! + x.bandwidth() / 2} ${x(nodeCycle.y)! + x.bandwidth() / 2} L${\n                                    x(nodeCycle.x)! + x.bandwidth()\n                                } ${x(nodeCycle.y)}Z`;\n                            } else if (i === 2) {\n                                // third path\n                                attribute = `M${x(nodeCycle.x)! + x.bandwidth() / 2} ${x(nodeCycle.y)! + x.bandwidth() / 2}L${x(nodeCycle.x)}  ${x(nodeCycle.y)! + x.bandwidth()}L${\n                                    x(nodeCycle.x)! + x.bandwidth()\n                                } ${x(nodeCycle.y)! + x.bandwidth()} Z`;\n                            } else if (i === 3) {\n                                // fourth path\n                                attribute = `M${x(nodeCycle.x)} ${x(nodeCycle.y)} L${x(nodeCycle.x)} ${x(nodeCycle.y)! + x.bandwidth()} L${x(nodeCycle.x)! + x.bandwidth() / 2} ${\n                                    x(nodeCycle.y)! + x.bandwidth() / 2\n                                }Z`;\n                            }\n                        }\n\n                        return attribute;\n                    })\n\n                    .attr('fill', (d, i) => {\n                        //b,y,r\n                        // const cycle1Color = \"#3366cc\";\n                        // const cycle2Color = \"#6d8695\";\n                        // const cycle3Color = \"#a8a75e\";\n                        // const cycle4Color = \"#e2c727\";\n                        // const cycle5Color = \"#ffb80a\";\n                        // const cycle6Color = \"#ff7b07\";\n                        // const cycle7Color = \"#ff3d03\";\n                        // const cycle8Color = \"#ff0000\";\n                        //b,y,r v2\n                        // const cycle1Color = \"#7dbbff\";\n                        // const cycle2Color = \"#adc5a7\";\n                        // const cycle3Color = \"#c4ca7a\";\n                        // const cycle4Color = \"#dccf4e\";\n                        // const cycle5Color = \"#f3d422\";\n                        // const cycle6Color = \"#ff9c09\";\n                        // const cycle7Color = \"#ff4e04\";\n                        // const cycle8Color = \"#ff0000\";\n                        //yellow\n                        // const cycle1Color = \"#ffff00\";\n                        // const cycle2Color = \"#d9e13c\";\n                        // const cycle3Color = \"#b7c351\";\n                        // const cycle4Color = \"#99a55e\";\n                        // const cycle5Color = \"#7f8766\";\n                        // const cycle6Color = \"#6c676a\";\n                        // const cycle7Color = \"#62446a\";\n                        // const cycle8Color = \"#660066\";\n                        //rainbow\n                        // const cycle1Color = \"#cb2026\";\n                        // const cycle2Color = \"#f8991d\";\n                        // const cycle3Color = \"#f6eb14\";\n                        // const cycle4Color = \"#40b549\";\n                        // const cycle5Color = \"#35c0ca\";\n                        // const cycle6Color = \"#3b2f8e\";\n                        // const cycle7Color = \"#7f469b\";\n                        // const cycle8Color = \"#000000\";\n                        //rainbow2\n                        const cycle1Color = '#3288bd';\n                        const cycle2Color = '#6fa6b6';\n                        const cycle3Color = '#9cc5b3';\n                        const cycle4Color = '#cae4b4';\n                        const cycle5Color = '#ffd593';\n                        const cycle6Color = '#faa974';\n                        const cycle7Color = '#ef7c61';\n                        const cycle8Color = '#e14958';\n                        //yellow~blue\n                        // const cycle1Color = '#ffbf63';\n                        // const cycle2Color = '#e4c168';\n                        // const cycle3Color = '#c4c26d';\n                        // const cycle4Color = '#9dc374';\n                        // const cycle5Color = '#5ebaa5';\n                        // const cycle6Color = '#5aa5b5';\n                        // const cycle7Color = '#558ec6';                        ';\n                        // const cycle8Color = '#5075d8';\n                        let color = '#000000';\n                        switch (d) {\n                            case 0:\n                                color = cycle1Color;\n                                break;\n                            case 1:\n                                color = cycle2Color;\n                                break;\n                            case 2:\n                                color = cycle3Color;\n                                break;\n                            case 3:\n                                color = cycle4Color;\n                                break;\n                            case 4:\n                                color = cycle5Color;\n                                break;\n                            case 5:\n                                color = cycle6Color;\n                                break;\n                            case 6:\n                                color = cycle7Color;\n                                break;\n                            case 7:\n                                color = cycle8Color;\n                                break;\n                        }\n\n                        return color;\n                    });\n            });\n        }\n\n        function mouseover(mouseEvent: MouseEvent, p: NodeCycle) {\n            console.log('mouseover');\n            d3.selectAll('.row text').classed('active', function (d, i) {\n                return i === p.y;\n            });\n            d3.selectAll('.column text').classed('active', function (d, i) {\n                return i === p.x;\n            });\n            // d3.selectAll(\".row text\").text(\"active\", function (d, i) {\n            //   return i + \"\";\n            // });\n        }\n\n        function mouseout() {\n            d3.selectAll('text').classed('active', false);\n        }\n\n        // // Add a group per neighborhood.\n        // var group = svg.selectAll(\".group\")\n        //   .data(layout.groups)\n        //   .enter().append(\"g\")\n        //   .attr(\"class\", \"group\")\n        //   .on(\"mouseover\", mouseover);\n\n        // // Add a mouseover title.\n        // group.append(\"title\").text(function (d, i) {\n        //   return node[i].name + \": \" + formatPercent(d.value / 1163) + \" of origins\";\n        // });\n\n        //updateData()\n        d3.select('#order').on('change', function () {\n            // clearTimeout(timeout);\n            //@ts-ignore\n            if (this.value === 'name' || this.value === 'group') {\n                selectVariable = '';\n                //@ts-ignore\n                order(this.value);\n            } else {\n                //@ts-ignore\n                selectVariable = this.value;\n                // selectvariable draw\n                rowgSelection.each(rowFunction);\n                console.log(d3.ascending(Number(selectVariable), 5));\n            }\n            //@ts-ignore\n            //로직 추가 여기서 json을 불러와야 한다.\n            // TODO, change, this.value가 뭐냐에 따라 cycle이 달라짐. 새로운 사이클 변수를 생성(저장).\n            //변수를 만들어야함\n        });\n\n        function order(value: string) {\n            //@ts-ignore\n            x.domain(orders[value]);\n            rowgSelection.each(rowFunction);\n\n            rowTextSelection\n                .transition()\n                .duration(2500)\n                .attr('x', -2)\n                .attr('y', (d, i) => x(d[0].y)! + x.bandwidth() * 0.75)\n                // .attr(\"dx\", \".02em\")\n                .attr('font-size', '20%')\n                .attr('text-anchor', 'end')\n                .text(function (d, i) {\n                    return nodes[i].name;\n                });\n\n            svg.selectAll('.column')\n                .transition()\n                .duration(2500)\n                .attr('transform', function (d, i) {\n                    return 'translate(' + x(i) + ')rotate(-90)';\n                });\n        }\n    }, []);\n\n    // 아래 return()은 html을 다루는 영역\n    return (\n        <div className=\"App\">\n            {/* <header>\n        April 13, 2021\n      </header> */}\n            <h1>Sooyeonjang Counting Cycle</h1>\n            {/* <h2>May 11, 2021</h2> */}\n\n            <aside style={{ marginTop: 0, marginRight: -200 }}>\n                <div>\n                    Order:{' '}\n                    <select id=\"order\">\n                        <option value=\"name\">by Time</option>\n                        {/* <option value=\"group\">by Frequency</option> */}\n                        <option value=\"0\">by Cycle1</option>\n                        <option value=\"1\">by Cycle2</option>\n                        <option value=\"2\">by Cycle3</option>\n                        <option value=\"3\">by Cycle4</option>\n                        <option value=\"4\">by Cycle5</option>\n                        <option value=\"5\">by Cycle6</option>\n                        <option value=\"6\">by Cycle7</option>\n                        <option value=\"7\">by Cycle8</option>\n                    </select>\n                </div>\n\n                <div>\n                    Built with <a href=\"https://d3js.org/\">d3.js</a>.\n                </div>\n\n                <p>\n                    <b>Cycle Legend</b>\n                </p>\n\n                {/* <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: 100}}> */}\n                {/* v1 */}\n                <div style={{ display: 'flex' }}>\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#3288bd', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 1</div>\n\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#6fa6b6', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 2</div>\n\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#9cc5b3', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 3</div>\n\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#cae4b4', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 4</div>\n                </div>\n\n                <div>\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#ffd593', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 5\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#faa974', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 6\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#ef7c61', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 7\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#e14958', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 8\n                </div>\n                {/* v2 */}\n                {/* <div style={{ display: 'flex' }}>\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#ffbf63', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 1</div>\n\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#e4c168', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 2</div>\n\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#c4c26d', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 3</div>\n\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#9dc374', paddingRight: '10em' }}></rect>\n                    </svg>\n                    <div>Cycle 4</div>\n                </div>\n\n                <div>\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#5ebaa5', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 5\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#5aa5b5', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 6\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#558ec6', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 7\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect width=\"13\" height=\"13\" style={{ fill: '#5075d8', paddingRight: '10em' }}></rect>\n                    </svg>\n                    Cycle 8\n                </div> */}\n                <div id=\"hi\">\n                    <b>Counting Cycle</b>\n                </div>\n\n                <div>\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <rect\n                            width=\"13\"\n                            height=\"13\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></rect>\n                    </svg>\n                    1 Cycle\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <path\n                            d=\"M13 0 L0 13 L13 13 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                        <path\n                            d=\"M0 0 L0 13 L13 0 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                    </svg>\n                    2 Cycles\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <path\n                            d=\"M0 13 H 13 V 8.666 H 0 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                        <path\n                            d=\"M0 8.66 H 13 V 4.333 H 0 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                        <path\n                            d=\"M0 4.33 H 13 V 0 H 0 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                    </svg>\n                    3 Cycles\n                    <svg width=\"13\" height=\"13\" style={{ marginLeft: 7 }}>\n                        <path\n                            d=\"M0 0 L6.5 6.5 L13 0 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                        <path\n                            d=\"M13 13 L6.5 6.5 L13 0 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                        <path\n                            d=\"M6.5 6.5 L0 13 L13 13 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                        <path\n                            d=\"M0 0 L0 13 L6.5 6.5 Z\"\n                            style={{\n                                fill: 'none',\n                                stroke: 'black',\n                                strokeWidth: '1',\n                                paddingRight: '10em',\n                            }}\n                        ></path>\n                    </svg>\n                    4 Cycles\n                </div>\n            </aside>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}