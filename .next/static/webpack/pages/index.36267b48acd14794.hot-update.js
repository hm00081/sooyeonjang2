"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/D3Drawer.ts":
/*!*******************************!*\
  !*** ./src/utils/D3Drawer.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D3Drawer: function() { return /* binding */ D3Drawer; },\n/* harmony export */   mouseout: function() { return /* binding */ mouseout; },\n/* harmony export */   mouseover: function() { return /* binding */ mouseover; }\n/* harmony export */ });\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/index.js\");\n\nvar D3Drawer = function(syj, cc) {\n    var rowFunction = // row: d3.Selection<SVGGElement, Matrix, SVGGElement, unknown>\n    //@ts-ignore\n    function rowFunction(row, rowIndex) {\n        var Selection = d3__WEBPACK_IMPORTED_MODULE_0__.select(this).selectAll(\".cell\").data(row.filter(function(d) {\n            return d.z;\n        })).join(\"g\").attr(\"class\", \"cell\").on(\"mouseover\", mouseover).on(\"mouseout\", mouseout);\n        Selection.each(function(nodeCycle) {\n            var cycles = [];\n            for(var cycle = 0; cycle < cc[0].length; cycle++){\n                if (cc[rowIndex][cycle] === 0 && cc[nodeCycle.nodeIndex][cycle] === 0) {} else if (cc[rowIndex][cycle] === 0 && cc[nodeCycle.nodeIndex][cycle] === 1) {} else if (cc[rowIndex][cycle] === 1 && cc[nodeCycle.nodeIndex][cycle] === 0) {} else if (cc[rowIndex][cycle] === 1 && cc[nodeCycle.nodeIndex][cycle] === 1) {\n                    if (selectVariable === \"0\" || selectVariable === \"1\" || selectVariable === \"2\" || selectVariable === \"3\" || selectVariable === \"4\" || selectVariable === \"5\" || selectVariable === \"6\" || selectVariable === \"7\") {\n                        //각 사이클\n                        if (cycle === Number(selectVariable)) {\n                            // selectVariable: d3.range(n).sort(function (a,))\n                            cycles.push(cycle);\n                        }\n                    } else {\n                        //name, group\n                        cycles.push(cycle);\n                    }\n                }\n            }\n            //initDraw()?\n            d3__WEBPACK_IMPORTED_MODULE_0__.select(this).selectAll(\"path\").data(cycles).join(\"path\").transition().duration(2500).attr(\"d\", function(d, i) {\n                var attribute = \"\";\n                if (cycles.length === 1) {\n                    attribute = \"M \".concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y), \" H \").concat(x(nodeCycle.x) + x.bandwidth(), \" V \").concat(x(nodeCycle.y) + x.bandwidth(), \" H\").concat(x(nodeCycle.x), \" L\").concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y));\n                }\n                if (cycles.length === 2) {\n                    if (i === 0) {\n                        // first path\n                        attribute = \"M\".concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y), \" L \").concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y) + x.bandwidth(), \" L\").concat(x(nodeCycle.x) + x.bandwidth(), \" \").concat(x(nodeCycle.y), \" Z\");\n                    } else if (i === 1) {\n                        // second path\n                        attribute = \"M \".concat(x(nodeCycle.x) + x.bandwidth(), \" \").concat(x(nodeCycle.y), \" L \").concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y) + x.bandwidth(), \" L\").concat(x(nodeCycle.x) + x.bandwidth(), \" \").concat(x(nodeCycle.y) + x.bandwidth(), \" Z\");\n                    }\n                } else if (cycles.length === 3) {\n                    if (i === 0) {\n                        // first path\n                        attribute = \"M\".concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y) + x.bandwidth(), \" H \").concat(x(nodeCycle.x) + x.bandwidth(), \" V \").concat(x(nodeCycle.y) + x.bandwidth() * 2 / 3, \" H \").concat(x(nodeCycle.x), \"Z\");\n                    } else if (i === 1) {\n                        // second path\n                        attribute = \"M\".concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y) + x.bandwidth() * 2 / 3, \" H \").concat(x(nodeCycle.x) + x.bandwidth(), \" V \").concat(x(nodeCycle.y) + x.bandwidth() / 3, \" H \").concat(x(nodeCycle.x), \"Z\");\n                    } else if (i === 2) {\n                        // third path\n                        attribute = \"M\".concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y) + x.bandwidth() / 3, \" H \").concat(x(nodeCycle.x) + x.bandwidth(), \" V \").concat(x(nodeCycle.y), \" H \").concat(x(nodeCycle.x), \" Z\");\n                    }\n                } else if (cycles.length === 4) {\n                    if (i === 0) {\n                        // first path\n                        attribute = \"M\".concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y), \" L\").concat(x(nodeCycle.x) + x.bandwidth() / 2, \" \").concat(x(nodeCycle.y) + x.bandwidth(), \"L\").concat(x(nodeCycle.x) + x.bandwidth(), \" \").concat(x(nodeCycle.y), \"Z\");\n                    } else if (i === 1) {\n                        // second path\n                        attribute = \"M\".concat(x(nodeCycle.x) + x.bandwidth(), \" \").concat(x(nodeCycle.y) + x.bandwidth(), \"L\").concat(x(nodeCycle.x) + x.bandwidth() / 2, \" \").concat(x(nodeCycle.y) + x.bandwidth() / 2, \" L\").concat(x(nodeCycle.x) + x.bandwidth(), \" \").concat(x(nodeCycle.y), \"Z\");\n                    } else if (i === 2) {\n                        // third path\n                        attribute = \"M\".concat(x(nodeCycle.x) + x.bandwidth() / 2, \" \").concat(x(nodeCycle.y) + x.bandwidth() / 2, \"L\").concat(x(nodeCycle.x), \"  \").concat(x(nodeCycle.y) + x.bandwidth(), \"L\").concat(x(nodeCycle.x) + x.bandwidth(), \" \").concat(x(nodeCycle.y) + x.bandwidth(), \" Z\");\n                    } else if (i === 3) {\n                        // fourth path\n                        attribute = \"M\".concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y), \" L\").concat(x(nodeCycle.x), \" \").concat(x(nodeCycle.y) + x.bandwidth(), \" L\").concat(x(nodeCycle.x) + x.bandwidth() / 2, \" \").concat(x(nodeCycle.y) + x.bandwidth() / 2, \"Z\");\n                    }\n                }\n                return attribute;\n            }).attr(\"fill\", function(d, i) {\n                var cycle1Color = \"#3288bd\";\n                var cycle2Color = \"#6fa6b6\";\n                var cycle3Color = \"#9cc5b3\";\n                var cycle4Color = \"#cae4b4\";\n                var cycle5Color = \"#ffd593\";\n                var cycle6Color = \"#faa974\";\n                var cycle7Color = \"#ef7c61\";\n                var cycle8Color = \"#e14958\";\n                var color = \"#000000\";\n                switch(d){\n                    case 0:\n                        color = cycle1Color;\n                        break;\n                    case 1:\n                        color = cycle2Color;\n                        break;\n                    case 2:\n                        color = cycle3Color;\n                        break;\n                    case 3:\n                        color = cycle4Color;\n                        break;\n                    case 4:\n                        color = cycle5Color;\n                        break;\n                    case 5:\n                        color = cycle6Color;\n                        break;\n                    case 6:\n                        color = cycle7Color;\n                        break;\n                    case 7:\n                        color = cycle8Color;\n                        break;\n                }\n                return color;\n            }).attr(\"stroke\", \"#ffffff\").attr(\"stroke-width\", \"2px\");\n        });\n    };\n    var order = function order(value) {\n        //@ts-ignore\n        x.domain(orders[value]);\n        rowgSelection.each(rowFunction);\n        rowTextSelection.transition().duration(2500).attr(\"x\", -2).attr(\"y\", function(d, i) {\n            return x(d[0].y) + x.bandwidth() * 0.75;\n        }).attr(\"font-size\", \"20%\").attr(\"text-anchor\", \"end\").text(function(d, i) {\n            return nodes[i].name;\n        });\n        svg.selectAll(\".column\").transition().duration(2500).attr(\"transform\", function(d, i) {\n            return \"translate(\" + x(i) + \")rotate(-90)\";\n        });\n    };\n    var selectVariable = \"\";\n    var margin = {\n        top: 250,\n        right: 200,\n        bottom: 10,\n        left: 50\n    }, width = 3000, height = 3000;\n    var x = d3__WEBPACK_IMPORTED_MODULE_0__.scaleBand().range([\n        0,\n        width\n    ]).domain(d3__WEBPACK_IMPORTED_MODULE_0__.range(syj.nodes.length));\n    var svg = d3__WEBPACK_IMPORTED_MODULE_0__.select(\"body\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).style(\"margin-left\", margin.left + \"px\").call(//@ts-ignore\n    d3__WEBPACK_IMPORTED_MODULE_0__.zoom().on(\"zoom\", function(event) {\n        svg.attr(\"transform\", function() {\n            return event.transform;\n        });\n    })) //zoomevent\n    .append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var matrix = [];\n    var nodes = syj.nodes;\n    var n = nodes.length;\n    nodes.forEach(function(node, i) {\n        node.index = i;\n        node.count = 0;\n        matrix[i] = d3__WEBPACK_IMPORTED_MODULE_0__.range(n).map(function(j) {\n            return {\n                x: j,\n                y: i,\n                z: 0,\n                nodeIndex: j\n            };\n        });\n    });\n    // Convert links to matrix; count character occurrences.\n    syj.links.forEach(function(link) {\n        matrix[link.source][link.target].z += link.value;\n        matrix[link.target][link.source].z += link.value;\n        matrix[link.source][link.source].z += link.value;\n        matrix[link.target][link.target].z += link.value;\n        nodes[link.source].count += link.value;\n        nodes[link.target].count += link.value;\n    });\n    // Precompute the orders.\n    var orders = {\n        name: d3__WEBPACK_IMPORTED_MODULE_0__.range(n).sort(function(a, b) {\n            return d3__WEBPACK_IMPORTED_MODULE_0__.ascending(nodes[a].name, nodes[b].name); //1~440까지 ascending\n        }),\n        group: d3__WEBPACK_IMPORTED_MODULE_0__.range(n).sort(function(a, b) {\n            return nodes[b].group - nodes[a].group;\n        })\n    };\n    // The default sort order.\n    x.domain(orders.name);\n    //initiate()??\n    svg.join(function(enter) {\n        return enter.append(\"rect\").attr(\"class\", \"background\").attr(\"width\", width).attr(\"height\", height);\n    }, function(update) {\n        return update;\n    }, function(exit) {\n        return exit.call(function(exit) {\n            return exit.remove();\n        });\n    });\n    var rowgSelection = svg.selectAll(\".row\").data(matrix).enter().append(\"g\").attr(\"class\", \"row\");\n    // .attr(\"transform\", function (d, i) { return \"translate(0,\" + x(i) + \")\"; })\n    rowgSelection.each(rowFunction); // d3.each = (js,ts).forEach 같은 반복문\n    // original 가로줄\n    // rowgSelection.append(\"line\").attr(\"x2\", width);\n    rowgSelection.each(function(d, i) {\n        // d3.select(this)\n        svg.append(\"line\").attr(\"x1\", 0).attr(\"y1\", x(d[0].y)).attr(\"x2\", width).attr(\"y2\", x(d[0].y));\n    });\n    var rowTextSelection = rowgSelection.append(\"text\").attr(\"x\", -2).attr(\"y\", function(d, i) {\n        return x(d[0].y) + x.bandwidth() * 0.75;\n    })// .attr(\"dx\", \".02em\")\n    .attr(\"font-size\", \"20%\").attr(\"text-anchor\", \"end\").text(function(d, i) {\n        return nodes[i].name;\n    });\n    var column = svg.selectAll(\".column\").data(matrix).enter().append(\"g\").attr(\"class\", \"column\").attr(\"transform\", function(d, i) {\n        return \"translate(\" + x(i) + \") rotate(-90)\";\n    });\n    // 세로줄\n    column.append(\"line\").attr(\"x1\", -width);\n    d3__WEBPACK_IMPORTED_MODULE_0__.select(\"#order\").on(\"change\", function() {\n        //@ts-ignore\n        if (this.value === \"name\" || this.value === \"group\") {\n            selectVariable = \"\";\n            //@ts-ignore\n            order(this.value);\n        } else {\n            //@ts-ignore\n            selectVariable = this.value;\n            // selectvariable draw\n            rowgSelection.each(rowFunction);\n            console.log(d3__WEBPACK_IMPORTED_MODULE_0__.ascending(Number(selectVariable), 5));\n        }\n    });\n};\nfunction mouseover(mouseEvent, p) {\n    console.log(\"mouseover\");\n    d3__WEBPACK_IMPORTED_MODULE_0__.selectAll(\".row text\").classed(\"active\", function(d, i) {\n        return i === p.y;\n    });\n    d3__WEBPACK_IMPORTED_MODULE_0__.selectAll(\".column text\").classed(\"active\", function(d, i) {\n        return i === p.x;\n    });\n}\nfunction mouseout() {\n    d3__WEBPACK_IMPORTED_MODULE_0__.selectAll(\"text\").classed(\"active\", false);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/D3Drawer.ts\n"));

/***/ })

});